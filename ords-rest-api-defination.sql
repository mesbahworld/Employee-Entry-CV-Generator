
-- Generated by ORDS REST Data Services 25.1.0.r1001652
-- Schema: YOUR_SCHEMA  Date: Sun Sep 07 01:29:44 2025 
--
        
BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'YOUR_SCHEMA',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'unorg',
      p_auto_rest_auth      => FALSE);
    
  ORDS.DEFINE_MODULE(
      p_module_name    => 'PG1 Employee Management',
      p_base_path      => '/pg1_emp_man/',
      p_items_per_page => 25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'data',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'data',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
    l_id       NUMBER := :id;
    l_emp_name VARCHAR2(200) := :emp_name;
    l_json     CLOB;
BEGIN


    PG1_API_GET_EMPLOYEE_FULL_JSON(l_id, l_emp_name, l_json);
    htp.p(l_json);
    DBMS_OUTPUT.PUT_LINE(l_json);

END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'data',
      p_method             => 'GET',
      p_name               => 'id',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'data',
      p_method             => 'GET',
      p_name               => 'emp_name',
      p_bind_variable_name => 'emp_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'data',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page => 25,
      p_mimes_allowed  => 'application/json',
      p_comments       => NULL,
      p_source         => 
'DECLARE 
v_payload CLOB := :body_text;

BEGIN
    PG1_PROC_SAVE_EMPLOYEE(p_employee_data => v_payload);
END;');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'data',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE 
    v_emp_id NUMBER := :id;
    v_response VARCHAR2(500);
BEGIN
    v_response := PG1_PKG_EMPLOYEE_MGMT.PG1_DELETE_EMPLOYEE(v_emp_id, v_response);
    htp.p(v_response);
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'data',
      p_method             => 'DELETE',
      p_name               => 'id',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'data',
      p_method             => 'DELETE',
      p_name               => 'v_response',
      p_bind_variable_name => 'v_response',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'list_des',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'list_des',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page => 25,
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
    l_des_id       NUMBER := :id;
    l_dept_name VARCHAR2(200) := :des_name;
    l_json     CLOB;
BEGIN


    PG1_API_GET_DESIGNATION_LIST (l_des_id, l_dept_name, l_json);
    htp.p(l_json);

END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'list_des',
      p_method             => 'GET',
      p_name               => 'id',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'list_des',
      p_method             => 'GET',
      p_name               => 'des_name',
      p_bind_variable_name => 'des_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'list_dept',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'list_dept',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
    l_dept_id       NUMBER := :id;
    l_dept_name VARCHAR2(200) := :dept_name;
    l_json     CLOB;
BEGIN


    PG1_API_GET_DEPARTMENT_LIST (l_dept_id, l_dept_name, l_json);
    htp.p(l_json);

END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'list_dept',
      p_method             => 'GET',
      p_name               => 'dept_name',
      p_bind_variable_name => 'dept_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'list_dept',
      p_method             => 'GET',
      p_name               => 'id',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'list_emp',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'PG1 Employee Management',
      p_pattern        => 'list_emp',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => NULL,
      p_comments       => NULL,
      p_source         => 
'DECLARE
  l_json_output CLOB;
  l_count       NUMBER;
BEGIN
  -- Check if any data exists before attempting to build JSON
  SELECT COUNT(*)
  INTO l_count
  FROM pg1_vw_employee_list
  WHERE is_active = ''Y''
    AND (:id IS NULL OR emp_id = :id)
    AND (UPPER(full_name) LIKE ''%'' || UPPER(:p_emp_name) || ''%''
    OR :p_emp_name IS NULL);

  IF l_count > 0 THEN
    -- Use a SQL/JSON function to directly format the query result as a JSON object
    SELECT
      JSON_OBJECT(
        ''status'' VALUE ''success'',
        ''statusCode'' VALUE 200,
        ''data'' VALUE JSON_ARRAYAGG(
          JSON_OBJECT(
            ''empId'' VALUE emp_id,
            ''fullName'' VALUE full_name
          )
        )
      )
    INTO l_json_output
    FROM pg1_vw_employee_list
    WHERE is_active = ''Y''
      AND (:id IS NULL OR emp_id = :id)
      AND (UPPER(full_name) LIKE ''%'' || UPPER(:p_emp_name) || ''%''
      OR :p_emp_name IS NULL);

    -- Print the JSON output to the HTTP respon' || 'se
    sys.htp.p(l_json_output);

  ELSE 
    -- If no data is found, return a 404 response
    sys.htp.p(
      JSON_OBJECT(
        ''status'' VALUE ''error'',
        ''statusCode'' VALUE 404,
        ''message'' VALUE ''Employee not found or inactive''
      )
    );
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    -- In case of any other unexpected error, return a 500 JSON response
    sys.htp.p(
      JSON_OBJECT(
        ''status'' VALUE ''error'',
        ''statusCode'' VALUE 500,
        ''message'' VALUE ''An unexpected error occurred: '' || SQLERRM
      )
    );
END;');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'list_emp',
      p_method             => 'GET',
      p_name               => 'p_emp_name',
      p_bind_variable_name => 'p_emp_name',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'PG1 Employee Management',
      p_pattern            => 'list_emp',
      p_method             => 'GET',
      p_name               => 'id',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

    
        
COMMIT;

END;